# Canary Deployment using Flagger
apiVersion: v1
kind: ConfigMap
metadata:
  name: flagger-config
  namespace: hotel-booking-production
data:
  # Flagger configuration for canary deployments
  mesh-provider: 'istio'
  metrics-server: 'http://prometheus:9090'
  slack-webhook: '${SLACK_WEBHOOK_URL}'
---
# Canary Custom Resource for Hotel Booking Application
apiVersion: flagger.app/v1beta1
kind: Canary
metadata:
  name: hotel-booking-canary
  namespace: hotel-booking-production
spec:
  # Target reference
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hotel-booking

  # Progress deadline
  progressDeadlineSeconds: 600

  # Service configuration
  service:
    port: 80
    targetPort: 3000
    gateways:
      - public-gateway.istio-system.svc.cluster.local
    hosts:
      - hotel-booking.com
      - www.hotel-booking.com

    # Traffic policy
    trafficPolicy:
      connectionPool:
        tcp:
          maxConnections: 100
        http:
          http1MaxPendingRequests: 50
          http2MaxRequests: 100
      outlierDetection:
        consecutiveErrors: 5
        interval: 30s
        baseEjectionTime: 30s
        maxEjectionPercent: 50
        minHealthPercent: 50

    # Retry policy
    retries:
      attempts: 3
      perTryTimeout: 5s
      retryOn: 'gateway-error,connect-failure,refused-stream'

  # Canary analysis configuration
  analysis:
    # Schedule interval
    interval: 1m

    # Number of iterations
    threshold: 10

    # Max traffic percentage
    maxWeight: 50

    # Canary increment step
    stepWeight: 5

    # Promotion configuration
    stepWeightPromotion: 20

    # Metrics for canary analysis
    metrics:
      - name: request-success-rate
        thresholdRange:
          min: 99
        interval: 1m

      - name: request-duration
        thresholdRange:
          max: 500
        interval: 1m

      - name: error-rate
        templateRef:
          name: error-rate
          namespace: hotel-booking-production
        thresholdRange:
          max: 1
        interval: 1m

      - name: custom-business-metric
        templateRef:
          name: booking-conversion-rate
          namespace: hotel-booking-production
        thresholdRange:
          min: 95
        interval: 5m

    # Load testing during canary analysis
    webhooks:
      - name: load-test
        type: pre-rollout
        url: http://flagger-loadtester.hotel-booking-production/
        timeout: 5m
        metadata:
          cmd: 'hey -z 5m -q 100 -c 10 http://hotel-booking.hotel-booking-production/'

      - name: acceptance-test
        type: pre-rollout
        url: http://flagger-loadtester.hotel-booking-production/
        timeout: 3m
        metadata:
          type: 'bash'
          cmd: "curl -s http://hotel-booking-canary.hotel-booking-production/health | grep -q 'healthy'"

      - name: rollback-notification
        type: post-rollout
        url: http://notification-service.hotel-booking-production/webhook
        metadata:
          severity: 'error'
          channel: 'deployments'

    # Alerts configuration
    alerts:
      - name: 'canary-promotion'
        severity: info
        providerRef:
          name: slack
          namespace: hotel-booking-production

      - name: 'canary-rollback'
        severity: error
        providerRef:
          name: slack
          namespace: hotel-booking-production
---
# Metric templates
apiVersion: flagger.app/v1beta1
kind: MetricTemplate
metadata:
  name: error-rate
  namespace: hotel-booking-production
spec:
  provider:
    type: prometheus
    address: http://prometheus:9090
  query: |
    100 - (
      sum(
        rate(
          http_request_duration_seconds_bucket{
            kubernetes_namespace="{{ namespace }}",
            kubernetes_pod_name=~"{{ target }}-[0-9a-zA-Z]+(-[0-9a-zA-Z]+)",
            status!~"5..",
            le="0.5"
          }[{{ interval }}]
        )
      ) 
      / 
      sum(
        rate(
          http_request_duration_seconds_count{
            kubernetes_namespace="{{ namespace }}",
            kubernetes_pod_name=~"{{ target }}-[0-9a-zA-Z]+(-[0-9a-zA-Z]+)"
          }[{{ interval }}]
        )
      )
    ) * 100
---
apiVersion: flagger.app/v1beta1
kind: MetricTemplate
metadata:
  name: booking-conversion-rate
  namespace: hotel-booking-production
spec:
  provider:
    type: prometheus
    address: http://prometheus:9090
  query: |
    (
      sum(
        rate(
          booking_completed_total{
            kubernetes_namespace="{{ namespace }}",
            kubernetes_pod_name=~"{{ target }}-[0-9a-zA-Z]+(-[0-9a-zA-Z]+)"
          }[{{ interval }}]
        )
      )
      /
      sum(
        rate(
          booking_initiated_total{
            kubernetes_namespace="{{ namespace }}",
            kubernetes_pod_name=~"{{ target }}-[0-9a-zA-Z]+(-[0-9a-zA-Z]+)"
          }[{{ interval }}]
        )
      )
    ) * 100
---
# Alert Provider for Slack notifications
apiVersion: v1
kind: Secret
metadata:
  name: slack-webhook
  namespace: hotel-booking-production
stringData:
  address: '${SLACK_WEBHOOK_URL}'
---
apiVersion: flagger.app/v1beta1
kind: AlertProvider
metadata:
  name: slack
  namespace: hotel-booking-production
spec:
  type: slack
  secretRef:
    name: slack-webhook
  channel: deployments
---
# Istio Gateway for canary traffic management
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: hotel-booking-gateway
  namespace: hotel-booking-production
spec:
  selector:
    istio: ingressgateway
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - 'hotel-booking.com'
        - 'www.hotel-booking.com'
    - port:
        number: 443
        name: https
        protocol: HTTPS
      tls:
        mode: SIMPLE
        credentialName: hotel-booking-tls
      hosts:
        - 'hotel-booking.com'
        - 'www.hotel-booking.com'
---
# VirtualService for traffic routing
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: hotel-booking
  namespace: hotel-booking-production
spec:
  hosts:
    - 'hotel-booking.com'
    - 'www.hotel-booking.com'
  gateways:
    - hotel-booking-gateway
    - mesh
  http:
    - match:
        - headers:
            x-canary:
              exact: 'true'
      route:
        - destination:
            host: hotel-booking-canary
            port:
              number: 80
          weight: 100
    - route:
        - destination:
            host: hotel-booking-primary
            port:
              number: 80
          weight: 100
---
# Horizontal Pod Autoscaler for canary deployment
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hotel-booking-hpa
  namespace: hotel-booking-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hotel-booking
  minReplicas: 3
  maxReplicas: 20
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
    - type: Pods
      pods:
        metric:
          name: http_requests_per_second
        target:
          type: AverageValue
          averageValue: '1000'
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60
        - type: Pods
          value: 5
          periodSeconds: 60
---
# PodDisruptionBudget for high availability during canary
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: hotel-booking-pdb
  namespace: hotel-booking-production
spec:
  minAvailable: 50%
  selector:
    matchLabels:
      app: hotel-booking
