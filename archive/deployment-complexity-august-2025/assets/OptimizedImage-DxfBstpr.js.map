{"version":3,"file":"OptimizedImage-DxfBstpr.js","sources":["../../src/hooks/useIntersectionObserver.ts","../../src/components/ui/OptimizedImage.tsx"],"sourcesContent":["import { useEffect, useState, RefObject } from 'react';\r\n\r\ninterface UseIntersectionObserverOptions {\r\n  threshold?: number | number[];\r\n  root?: Element | null;\r\n  rootMargin?: string;\r\n  freezeOnceVisible?: boolean;\r\n}\r\n\r\ninterface UseIntersectionObserverResult {\r\n  isIntersecting: boolean;\r\n  entry?: IntersectionObserverEntry;\r\n}\r\n\r\nexport function useIntersectionObserver(\r\n  elementRef: RefObject<Element>,\r\n  options: UseIntersectionObserverOptions = {}\r\n): UseIntersectionObserverResult {\r\n  const {\r\n    threshold = 0,\r\n    root = null,\r\n    rootMargin = '0%',\r\n    freezeOnceVisible = false,\r\n  } = options;\r\n\r\n  const [entry, setEntry] = useState<IntersectionObserverEntry>();\r\n  const [isIntersecting, setIsIntersecting] = useState(false);\r\n\r\n  const frozen = entry?.isIntersecting && freezeOnceVisible;\r\n\r\n  const updateEntry = ([entry]: IntersectionObserverEntry[]): void => {\r\n    if (!frozen) {\r\n      setEntry(entry);\r\n      setIsIntersecting(entry.isIntersecting);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const node = elementRef?.current;\r\n    const hasIOSupport = !!window.IntersectionObserver;\r\n\r\n    if (!hasIOSupport || frozen || !node) {\r\n      return;\r\n    }\r\n\r\n    const observerParams = { threshold, root, rootMargin };\r\n    const observer = new IntersectionObserver(updateEntry, observerParams);\r\n\r\n    observer.observe(node);\r\n\r\n    return () => observer.disconnect();\r\n  }, [elementRef, threshold, root, rootMargin, frozen]);\r\n\r\n  return { isIntersecting, entry };\r\n}","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\r\nimport { logger } from '../../utils/logger';\r\n\r\ninterface OptimizedImageProps {\r\n  src: string;\r\n  alt: string;\r\n  className?: string;\r\n  width?: number;\r\n  height?: number;\r\n  fallbackSrc?: string;\r\n  priority?: boolean;\r\n  onLoad?: () => void;\r\n  onError?: (error: Event) => void;\r\n  loading?: 'lazy' | 'eager';\r\n  sizes?: string;\r\n  srcSet?: string;\r\n  aspectRatio?: string;\r\n  objectFit?: 'contain' | 'cover' | 'fill' | 'none' | 'scale-down';\r\n}\r\n\r\nexport const OptimizedImage: React.FC<OptimizedImageProps> = ({\r\n  src,\r\n  alt,\r\n  className = '',\r\n  width,\r\n  height,\r\n  fallbackSrc = 'https://images.unsplash.com/photo-1566073771259-6a8506099945?w=400&h=300&fit=crop',\r\n  priority = false,\r\n  onLoad,\r\n  onError,\r\n  loading = 'lazy',\r\n  sizes,\r\n  srcSet,\r\n  aspectRatio,\r\n  objectFit = 'cover',\r\n}) => {\r\n  const [imageSrc, setImageSrc] = useState<string>(priority ? src : '');\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n  const [imageError, setImageError] = useState(false);\r\n  const [loadStartTime, setLoadStartTime] = useState<number>(0);\r\n  const imgRef = useRef<HTMLImageElement>(null);\r\n\r\n  // Use intersection observer for lazy loading\r\n  const { isIntersecting } = useIntersectionObserver(imgRef, {\r\n    threshold: 0.1,\r\n    rootMargin: '50px',\r\n  });\r\n\r\n  // Start loading image when it becomes visible or if priority is set\r\n  useEffect(() => {\r\n    if ((isIntersecting || priority) && !imageSrc && !imageError) {\r\n      setLoadStartTime(Date.now());\r\n      setImageSrc(src);\r\n      logger.debug('Image loading started', { \r\n        component: 'OptimizedImage', \r\n        src, \r\n        priority,\r\n        isIntersecting \r\n      });\r\n    }\r\n  }, [isIntersecting, priority, src, imageSrc, imageError]);\r\n\r\n  const handleLoad = (_event: React.SyntheticEvent<HTMLImageElement>) => {\r\n    setImageLoaded(true);\r\n    const loadTime = Date.now() - loadStartTime;\r\n    \r\n    logger.debug('Image loaded successfully', { \r\n      component: 'OptimizedImage', \r\n      src: imageSrc,\r\n      loadTime: `${loadTime}ms`\r\n    });\r\n    \r\n    onLoad?.();\r\n  };\r\n\r\n  const handleError = (_event: React.SyntheticEvent<HTMLImageElement>) => {\r\n    setImageError(true);\r\n    const loadTime = Date.now() - loadStartTime;\r\n    \r\n    logger.warn('Image failed to load, using fallback', { \r\n      component: 'OptimizedImage', \r\n      originalSrc: src,\r\n      fallbackSrc,\r\n      loadTime: `${loadTime}ms`\r\n    });\r\n\r\n    if (imageSrc !== fallbackSrc && fallbackSrc) {\r\n      setImageSrc(fallbackSrc);\r\n      setImageError(false);\r\n    }\r\n    \r\n    onError?.(_event.nativeEvent);\r\n  };\r\n\r\n  const containerStyle: React.CSSProperties = {\r\n    aspectRatio: aspectRatio || (width && height ? `${width}/${height}` : undefined),\r\n    width: width ? `${width}px` : undefined,\r\n    height: height ? `${height}px` : undefined,\r\n  };\r\n\r\n  const imageStyle: React.CSSProperties = {\r\n    objectFit,\r\n    transition: 'opacity 0.3s ease-in-out',\r\n    opacity: imageLoaded ? 1 : 0,\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className={`relative overflow-hidden bg-gray-100 ${className}`}\r\n      style={containerStyle}\r\n    >\r\n      {/* Placeholder/Loading state */}\r\n      {!imageLoaded && (\r\n        <div className=\"absolute inset-0 flex items-center justify-center bg-gradient-to-br from-gray-100 to-gray-200\">\r\n          <div className=\"flex flex-col items-center text-gray-400\">\r\n            <svg \r\n              className=\"w-8 h-8 animate-pulse\" \r\n              fill=\"currentColor\" \r\n              viewBox=\"0 0 20 20\"\r\n            >\r\n              <path \r\n                fillRule=\"evenodd\" \r\n                d=\"M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z\" \r\n                clipRule=\"evenodd\" \r\n              />\r\n            </svg>\r\n            <span className=\"text-xs mt-1\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Actual image */}\r\n      {imageSrc && (\r\n        <img\r\n          ref={imgRef}\r\n          src={imageSrc}\r\n          alt={alt}\r\n          width={width}\r\n          height={height}\r\n          loading={loading}\r\n          sizes={sizes}\r\n          srcSet={srcSet}\r\n          style={imageStyle}\r\n          className=\"w-full h-full\"\r\n          onLoad={handleLoad}\r\n          onError={handleError}\r\n          decoding=\"async\"\r\n        />\r\n      )}\r\n\r\n      {/* Error state */}\r\n      {imageError && imageSrc === fallbackSrc && (\r\n        <div className=\"absolute inset-0 flex items-center justify-center bg-gray-200\">\r\n          <div className=\"flex flex-col items-center text-gray-500\">\r\n            <svg \r\n              className=\"w-8 h-8\" \r\n              fill=\"currentColor\" \r\n              viewBox=\"0 0 20 20\"\r\n            >\r\n              <path \r\n                fillRule=\"evenodd\" \r\n                d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" \r\n                clipRule=\"evenodd\" \r\n              />\r\n            </svg>\r\n            <span className=\"text-xs mt-1\">Failed to load</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptimizedImage;"],"names":["useIntersectionObserver","elementRef","options","threshold","root","rootMargin","freezeOnceVisible","entry","setEntry","useState","isIntersecting","setIsIntersecting","frozen","updateEntry","useEffect","node","observerParams","observer","OptimizedImage","src","alt","className","width","height","fallbackSrc","priority","onLoad","onError","loading","sizes","srcSet","aspectRatio","objectFit","imageSrc","setImageSrc","imageLoaded","setImageLoaded","imageError","setImageError","loadStartTime","setLoadStartTime","imgRef","useRef","logger","handleLoad","_event","loadTime","handleError","containerStyle","imageStyle","jsxs","jsx"],"mappings":"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"}