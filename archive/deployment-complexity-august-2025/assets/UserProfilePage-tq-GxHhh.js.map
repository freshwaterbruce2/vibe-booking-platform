{"version":3,"file":"UserProfilePage-tq-GxHhh.js","sources":["../../src/services/personalizationService.ts","../../src/components/user/PersonalizationPreferences.tsx","../../src/components/analytics/TravelAnalytics.tsx","../../src/pages/UserProfilePage.tsx"],"sourcesContent":["import { logger } from '@/utils/logger';\r\nimport { bookingService, type Booking } from './bookingService';\r\n\r\nexport interface UserPreferences {\r\n  budgetRange: {\r\n    min: number;\r\n    max: number;\r\n    currency: string;\r\n  };\r\n  preferredRegions: string[];\r\n  hotelTypes: string[];\r\n  amenities: string[];\r\n  bookingPatterns: {\r\n    averageStayDuration: number;\r\n    preferredDaysOfWeek: number[];\r\n    seasonalPreferences: string[];\r\n    advanceBookingDays: number;\r\n  };\r\n  travelStyle: 'luxury' | 'business' | 'leisure' | 'budget' | 'adventure';\r\n  passionCategories: string[];\r\n}\r\n\r\nexport interface PersonalizationInsights {\r\n  recommendedHotels: any[];\r\n  budgetOptimization: {\r\n    averageNightlyRate: number;\r\n    suggestedBudget: number;\r\n    seasonalTrends: any[];\r\n  };\r\n  travelPatterns: {\r\n    mostVisitedDestinations: string[];\r\n    preferredStayDuration: number;\r\n    bookingLeadTime: number;\r\n  };\r\n  preferences: UserPreferences;\r\n}\r\n\r\nclass PersonalizationService {\r\n  async analyzeUserPreferences(userId: string): Promise<UserPreferences | null> {\r\n    try {\r\n      // Get user's booking history\r\n      const bookings = await bookingService.getUserBookings(userId);\r\n      \r\n      if (bookings.length === 0) {\r\n        logger.info('No booking history for personalization analysis', { userId });\r\n        return null;\r\n      }\r\n\r\n      // Analyze budget patterns\r\n      const amounts = bookings\r\n        .filter(b => b.status === 'completed' || b.status === 'confirmed')\r\n        .map(b => b.totalAmount);\r\n      \r\n      const budgetRange = amounts.length > 0 ? {\r\n        min: Math.min(...amounts) * 0.8, // 20% below minimum\r\n        max: Math.max(...amounts) * 1.2, // 20% above maximum\r\n        currency: bookings[0].currency || 'USD'\r\n      } : {\r\n        min: 100,\r\n        max: 500,\r\n        currency: 'USD'\r\n      };\r\n\r\n      // Analyze stay duration patterns\r\n      const stayDurations = bookings.map(b => b.nights);\r\n      const averageStayDuration = stayDurations.length > 0 \r\n        ? Math.round(stayDurations.reduce((sum, nights) => sum + nights, 0) / stayDurations.length)\r\n        : 2;\r\n\r\n      // Analyze booking advance time\r\n      const advanceBookingTimes = bookings.map(b => {\r\n        const bookingDate = new Date(b.createdAt);\r\n        const checkInDate = new Date(b.checkIn);\r\n        return Math.floor((checkInDate.getTime() - bookingDate.getTime()) / (1000 * 60 * 60 * 24));\r\n      });\r\n      \r\n      const averageAdvanceBooking = advanceBookingTimes.length > 0\r\n        ? Math.round(advanceBookingTimes.reduce((sum, days) => sum + days, 0) / advanceBookingTimes.length)\r\n        : 14;\r\n\r\n      // Extract preferred regions/cities\r\n      const cities = bookings.map(b => b.hotelCity).filter(city => city);\r\n      const regionCounts = cities.reduce((acc: Record<string, number>, city) => {\r\n        acc[city] = (acc[city] || 0) + 1;\r\n        return acc;\r\n      }, {});\r\n      \r\n      const preferredRegions = Object.entries(regionCounts)\r\n        .sort(([,a], [,b]) => b - a)\r\n        .slice(0, 5)\r\n        .map(([city]) => city);\r\n\r\n      // Determine travel style based on spending patterns\r\n      const averageAmount = amounts.length > 0 \r\n        ? amounts.reduce((sum, amount) => sum + amount, 0) / amounts.length \r\n        : 250;\r\n      \r\n      let travelStyle: UserPreferences['travelStyle'] = 'leisure';\r\n      if (averageAmount > 800) travelStyle = 'luxury';\r\n      else if (averageAmount > 400) travelStyle = 'business';\r\n      else if (averageAmount < 150) travelStyle = 'budget';\r\n\r\n      // Analyze day-of-week preferences\r\n      const checkInDays = bookings.map(b => new Date(b.checkIn).getDay());\r\n      const dayPreferences = checkInDays.reduce((acc: Record<number, number>, day) => {\r\n        acc[day] = (acc[day] || 0) + 1;\r\n        return acc;\r\n      }, {});\r\n      \r\n      const preferredDaysOfWeek = Object.entries(dayPreferences)\r\n        .sort(([,a], [,b]) => b - a)\r\n        .slice(0, 3)\r\n        .map(([day]) => parseInt(day));\r\n\r\n      const preferences: UserPreferences = {\r\n        budgetRange,\r\n        preferredRegions,\r\n        hotelTypes: this.inferHotelTypes(travelStyle),\r\n        amenities: this.inferPreferredAmenities(travelStyle, averageStayDuration),\r\n        bookingPatterns: {\r\n          averageStayDuration,\r\n          preferredDaysOfWeek,\r\n          seasonalPreferences: this.analyzeSeasonalPreferences(bookings),\r\n          advanceBookingDays: averageAdvanceBooking\r\n        },\r\n        travelStyle,\r\n        passionCategories: this.inferPassionCategories(travelStyle, preferredRegions)\r\n      };\r\n\r\n      logger.info('User preferences analyzed successfully', {\r\n        userId,\r\n        travelStyle,\r\n        averageAmount,\r\n        bookingCount: bookings.length\r\n      });\r\n\r\n      return preferences;\r\n    } catch (error) {\r\n      logger.error('Failed to analyze user preferences:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async generatePersonalizationInsights(userId: string): Promise<PersonalizationInsights | null> {\r\n    try {\r\n      const [preferences, bookings] = await Promise.all([\r\n        this.analyzeUserPreferences(userId),\r\n        bookingService.getUserBookings(userId)\r\n      ]);\r\n\r\n      if (!preferences) {\r\n        return null;\r\n      }\r\n\r\n      // Generate travel patterns\r\n      const completedBookings = bookings.filter(b => b.status === 'completed');\r\n      const destinationCounts = completedBookings.reduce((acc: Record<string, number>, booking) => {\r\n        const destination = booking.hotelCity;\r\n        if (destination) {\r\n          acc[destination] = (acc[destination] || 0) + 1;\r\n        }\r\n        return acc;\r\n      }, {});\r\n\r\n      const mostVisitedDestinations = Object.entries(destinationCounts)\r\n        .sort(([,a], [,b]) => b - a)\r\n        .slice(0, 5)\r\n        .map(([destination]) => destination);\r\n\r\n      // Calculate budget optimization suggestions\r\n      const amounts = completedBookings.map(b => b.totalAmount);\r\n      const averageNightlyRate = amounts.length > 0 \r\n        ? amounts.reduce((sum, amount) => sum + amount, 0) / amounts.length\r\n        : 200;\r\n\r\n      const suggestedBudget = Math.round(averageNightlyRate * 1.1); // 10% increase for better options\r\n\r\n      const insights: PersonalizationInsights = {\r\n        recommendedHotels: [], // Will be populated by hotel recommendation logic\r\n        budgetOptimization: {\r\n          averageNightlyRate,\r\n          suggestedBudget,\r\n          seasonalTrends: this.analyzeSeasonalTrends(bookings)\r\n        },\r\n        travelPatterns: {\r\n          mostVisitedDestinations,\r\n          preferredStayDuration: preferences.bookingPatterns.averageStayDuration,\r\n          bookingLeadTime: preferences.bookingPatterns.advanceBookingDays\r\n        },\r\n        preferences\r\n      };\r\n\r\n      logger.info('Personalization insights generated', {\r\n        userId,\r\n        insightsGenerated: true,\r\n        destinationCount: mostVisitedDestinations.length\r\n      });\r\n\r\n      return insights;\r\n    } catch (error) {\r\n      logger.error('Failed to generate personalization insights:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private inferHotelTypes(travelStyle: string): string[] {\r\n    const hotelTypes = [];\r\n    \r\n    switch (travelStyle) {\r\n      case 'luxury':\r\n        hotelTypes.push('5-star', 'boutique', 'resort', 'luxury suite');\r\n        break;\r\n      case 'business':\r\n        hotelTypes.push('business hotel', '4-star', 'conference hotel', 'city center');\r\n        break;\r\n      case 'leisure':\r\n        hotelTypes.push('3-star', '4-star', 'family-friendly', 'resort');\r\n        break;\r\n      case 'budget':\r\n        hotelTypes.push('2-star', '3-star', 'budget hotel', 'hostel');\r\n        break;\r\n      case 'adventure':\r\n        hotelTypes.push('eco-lodge', 'mountain resort', 'adventure hotel', 'camping');\r\n        break;\r\n    }\r\n\r\n    return hotelTypes;\r\n  }\r\n\r\n  private inferPreferredAmenities(travelStyle: string, averageStayDuration: number): string[] {\r\n    const amenities = ['free-wifi', 'parking'];\r\n    \r\n    if (travelStyle === 'luxury') {\r\n      amenities.push('spa', 'concierge', 'fine-dining', 'premium-bedding');\r\n    }\r\n    \r\n    if (travelStyle === 'business') {\r\n      amenities.push('business-center', 'meeting-rooms', 'express-checkout');\r\n    }\r\n    \r\n    if (averageStayDuration > 3) {\r\n      amenities.push('room-service', 'laundry', 'kitchenette');\r\n    }\r\n    \r\n    return amenities;\r\n  }\r\n\r\n  private inferPassionCategories(travelStyle: string, preferredRegions: string[]): string[] {\r\n    const categories = [];\r\n    \r\n    // Infer from travel style\r\n    if (travelStyle === 'luxury') categories.push('luxury', 'fine-dining');\r\n    if (travelStyle === 'adventure') categories.push('adventure', 'nature');\r\n    if (travelStyle === 'business') categories.push('business', 'city-break');\r\n    \r\n    // Infer from destinations (basic city-to-category mapping)\r\n    const cityCategories: Record<string, string[]> = {\r\n      'New York': ['culture', 'city-break', 'business'],\r\n      'Paris': ['romance', 'culture', 'fine-dining'],\r\n      'Tokyo': ['culture', 'business', 'adventure'],\r\n      'London': ['culture', 'business', 'city-break'],\r\n      'Miami': ['beach', 'nightlife', 'luxury'],\r\n      'Barcelona': ['culture', 'beach', 'architecture'],\r\n      'Rome': ['culture', 'history', 'fine-dining']\r\n    };\r\n    \r\n    preferredRegions.forEach(region => {\r\n      const regionCategories = cityCategories[region];\r\n      if (regionCategories) {\r\n        categories.push(...regionCategories);\r\n      }\r\n    });\r\n    \r\n    return [...new Set(categories)];\r\n  }\r\n\r\n  private analyzeSeasonalPreferences(bookings: Booking[]): string[] {\r\n    const seasonCounts = bookings.reduce((acc: Record<string, number>, booking) => {\r\n      const month = new Date(booking.checkIn).getMonth();\r\n      let season = 'spring';\r\n      \r\n      if (month >= 2 && month <= 4) season = 'spring';\r\n      else if (month >= 5 && month <= 7) season = 'summer';\r\n      else if (month >= 8 && month <= 10) season = 'fall';\r\n      else season = 'winter';\r\n      \r\n      acc[season] = (acc[season] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    \r\n    return Object.entries(seasonCounts)\r\n      .sort(([,a], [,b]) => b - a)\r\n      .slice(0, 2)\r\n      .map(([season]) => season);\r\n  }\r\n\r\n  private analyzeSeasonalTrends(bookings: Booking[]): any[] {\r\n    const monthlySpending = bookings.reduce((acc: Record<number, number[]>, booking) => {\r\n      const month = new Date(booking.checkIn).getMonth();\r\n      if (!acc[month]) acc[month] = [];\r\n      acc[month].push(booking.totalAmount);\r\n      return acc;\r\n    }, {});\r\n\r\n    return Object.entries(monthlySpending).map(([month, amounts]) => ({\r\n      month: parseInt(month),\r\n      averageSpending: amounts.reduce((sum, amount) => sum + amount, 0) / amounts.length,\r\n      bookingCount: amounts.length\r\n    }));\r\n  }\r\n\r\n  async updateUserPreferences(userId: string, preferences: Partial<UserPreferences>): Promise<boolean> {\r\n    try {\r\n      // In a real implementation, this would save to a database\r\n      // For now, we'll store in localStorage as a demo\r\n      const existingPrefs = await this.analyzeUserPreferences(userId);\r\n      const updatedPrefs = { ...existingPrefs, ...preferences };\r\n      \r\n      localStorage.setItem(`user-preferences-${userId}`, JSON.stringify(updatedPrefs));\r\n      \r\n      logger.info('User preferences updated', { userId });\r\n      return true;\r\n    } catch (error) {\r\n      logger.error('Failed to update user preferences:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async getUserPreferences(userId: string): Promise<UserPreferences | null> {\r\n    try {\r\n      // Try to get from localStorage first (for demo purposes)\r\n      const stored = localStorage.getItem(`user-preferences-${userId}`);\r\n      if (stored) {\r\n        return JSON.parse(stored);\r\n      }\r\n      \r\n      // Otherwise analyze from booking history\r\n      return this.analyzeUserPreferences(userId);\r\n    } catch (error) {\r\n      logger.error('Failed to get user preferences:', error);\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const personalizationService = new PersonalizationService();\r\nexport default personalizationService;","import React, { useState, useEffect } from 'react';\r\nimport { Star, DollarSign, MapPin, Calendar, Heart, Settings, TrendingUp, Users } from 'lucide-react';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { personalizationService, type UserPreferences, type PersonalizationInsights } from '@/services/personalizationService';\r\nimport { Button } from '@/components/ui/Button';\r\nimport { LoadingSpinner } from '@/components/ui/LoadingSpinner';\r\nimport { logger } from '@/utils/logger';\r\n\r\ninterface PersonalizationPreferencesProps {\r\n  className?: string;\r\n}\r\n\r\nconst PersonalizationPreferences: React.FC<PersonalizationPreferencesProps> = ({ className = '' }) => {\r\n  const { user } = useAuth();\r\n  const [preferences, setPreferences] = useState<UserPreferences | null>(null);\r\n  const [insights, setInsights] = useState<PersonalizationInsights | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [activeSection, setActiveSection] = useState<'preferences' | 'insights'>('preferences');\r\n\r\n  useEffect(() => {\r\n    if (user?.id) {\r\n      loadPersonalizationData();\r\n    }\r\n  }, [user?.id]);\r\n\r\n  const loadPersonalizationData = async () => {\r\n    if (!user?.id) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const [userPrefs, userInsights] = await Promise.all([\r\n        personalizationService.getUserPreferences(user.id),\r\n        personalizationService.generatePersonalizationInsights(user.id)\r\n      ]);\r\n\r\n      setPreferences(userPrefs);\r\n      setInsights(userInsights);\r\n\r\n      logger.info('Personalization data loaded', {\r\n        userId: user.id,\r\n        hasPreferences: !!userPrefs,\r\n        hasInsights: !!userInsights\r\n      });\r\n    } catch (error) {\r\n      logger.error('Failed to load personalization data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  const formatBudgetRange = (min: number, max: number, currency: string) => {\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency,\r\n      minimumFractionDigits: 0\r\n    });\r\n    return `${formatter.format(min)} - ${formatter.format(max)}`;\r\n  };\r\n\r\n  const getTravelStyleColor = (style: string) => {\r\n    const colors = {\r\n      luxury: 'bg-purple-100 text-purple-800 border-purple-200',\r\n      business: 'bg-blue-100 text-blue-800 border-blue-200',\r\n      leisure: 'bg-green-100 text-green-800 border-green-200',\r\n      budget: 'bg-orange-100 text-orange-800 border-orange-200',\r\n      adventure: 'bg-red-100 text-red-800 border-red-200'\r\n    };\r\n    return colors[style as keyof typeof colors] || 'bg-gray-100 text-gray-800 border-gray-200';\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={`flex justify-center py-12 ${className}`}>\r\n        <LoadingSpinner size=\"lg\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!preferences && !insights) {\r\n    return (\r\n      <div className={`text-center py-12 ${className}`}>\r\n        <div className=\"bg-gradient-to-br from-slate-50 to-cream-50 rounded-2xl p-8 border border-slate-200\">\r\n          <Settings className=\"w-16 h-16 text-slate-400 mx-auto mb-4\" />\r\n          <h3 className=\"text-xl font-semibold text-slate-800 mb-2\">\r\n            Build Your Travel Profile\r\n          </h3>\r\n          <p className=\"text-slate-600 mb-6\">\r\n            Make a few bookings to unlock personalized recommendations and insights about your travel preferences.\r\n          </p>\r\n          <Button size=\"lg\" onClick={loadPersonalizationData}>\r\n            Refresh Analysis\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const renderPreferencesSection = () => (\r\n    <div className=\"space-y-6\">\r\n      {preferences && (\r\n        <>\r\n          {/* Travel Style */}\r\n          <div className=\"bg-white rounded-2xl p-6 border border-slate-200 shadow-luxury\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-lg font-semibold text-slate-900 flex items-center gap-2\">\r\n                <Star className=\"w-5 h-5 text-luxury-gold\" />\r\n                Travel Style\r\n              </h3>\r\n            </div>\r\n            <div className=\"flex items-center gap-3\">\r\n              <span className={`px-4 py-2 rounded-full text-sm font-medium border ${getTravelStyleColor(preferences.travelStyle)}`}>\r\n                {preferences.travelStyle.charAt(0).toUpperCase() + preferences.travelStyle.slice(1)}\r\n              </span>\r\n              <p className=\"text-slate-600 text-sm\">\r\n                Based on your booking patterns and spending habits\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Budget Preferences */}\r\n          <div className=\"bg-white rounded-2xl p-6 border border-slate-200 shadow-luxury\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-lg font-semibold text-slate-900 flex items-center gap-2\">\r\n                <DollarSign className=\"w-5 h-5 text-luxury-gold\" />\r\n                Budget Range\r\n              </h3>\r\n            </div>\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-slate-700\">Typical Range:</span>\r\n                <span className=\"font-semibold text-luxury-navy\">\r\n                  {formatBudgetRange(preferences.budgetRange.min, preferences.budgetRange.max, preferences.budgetRange.currency)}\r\n                </span>\r\n              </div>\r\n              <div className=\"text-sm text-slate-600\">\r\n                Per night, based on your booking history\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Preferred Destinations */}\r\n          <div className=\"bg-white rounded-2xl p-6 border border-slate-200 shadow-luxury\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-lg font-semibold text-slate-900 flex items-center gap-2\">\r\n                <MapPin className=\"w-5 h-5 text-luxury-gold\" />\r\n                Favorite Destinations\r\n              </h3>\r\n            </div>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {preferences.preferredRegions.slice(0, 8).map((region, index) => (\r\n                <span\r\n                  key={index}\r\n                  className=\"px-3 py-1 bg-slate-100 text-slate-700 rounded-full text-sm\"\r\n                >\r\n                  {region}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Booking Patterns */}\r\n          <div className=\"bg-white rounded-2xl p-6 border border-slate-200 shadow-luxury\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-lg font-semibold text-slate-900 flex items-center gap-2\">\r\n                <Calendar className=\"w-5 h-5 text-luxury-gold\" />\r\n                Booking Patterns\r\n              </h3>\r\n            </div>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div className=\"flex items-center justify-between py-2\">\r\n                <span className=\"text-slate-600\">Average Stay:</span>\r\n                <span className=\"font-semibold text-slate-900\">\r\n                  {preferences.bookingPatterns.averageStayDuration} night{preferences.bookingPatterns.averageStayDuration > 1 ? 's' : ''}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex items-center justify-between py-2\">\r\n                <span className=\"text-slate-600\">Advance Booking:</span>\r\n                <span className=\"font-semibold text-slate-900\">\r\n                  {preferences.bookingPatterns.advanceBookingDays} days\r\n                </span>\r\n              </div>\r\n              <div className=\"flex items-center justify-between py-2\">\r\n                <span className=\"text-slate-600\">Favorite Seasons:</span>\r\n                <div className=\"flex gap-1\">\r\n                  {preferences.bookingPatterns.seasonalPreferences.map((season, index) => (\r\n                    <span key={index} className=\"text-sm bg-slate-100 px-2 py-1 rounded text-slate-700\">\r\n                      {season}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Passion Categories */}\r\n          <div className=\"bg-white rounded-2xl p-6 border border-slate-200 shadow-luxury\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-lg font-semibold text-slate-900 flex items-center gap-2\">\r\n                <Heart className=\"w-5 h-5 text-luxury-gold\" />\r\n                Travel Interests\r\n              </h3>\r\n            </div>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {preferences.passionCategories.map((category, index) => (\r\n                <span\r\n                  key={index}\r\n                  className=\"px-3 py-1 bg-gradient-to-r from-luxury-navy to-slate-600 text-white rounded-full text-sm\"\r\n                >\r\n                  {category}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const renderInsightsSection = () => (\r\n    <div className=\"space-y-6\">\r\n      {insights && (\r\n        <>\r\n          {/* Travel Patterns */}\r\n          <div className=\"bg-white rounded-2xl p-6 border border-slate-200 shadow-luxury\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-lg font-semibold text-slate-900 flex items-center gap-2\">\r\n                <TrendingUp className=\"w-5 h-5 text-luxury-gold\" />\r\n                Your Travel Patterns\r\n              </h3>\r\n            </div>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div className=\"text-center p-4 bg-slate-50 rounded-xl\">\r\n                <div className=\"text-2xl font-bold text-luxury-navy mb-1\">\r\n                  {insights.travelPatterns.mostVisitedDestinations.length}\r\n                </div>\r\n                <div className=\"text-sm text-slate-600\">Unique Destinations</div>\r\n              </div>\r\n              <div className=\"text-center p-4 bg-slate-50 rounded-xl\">\r\n                <div className=\"text-2xl font-bold text-luxury-navy mb-1\">\r\n                  {insights.travelPatterns.preferredStayDuration}\r\n                </div>\r\n                <div className=\"text-sm text-slate-600\">Average Nights</div>\r\n              </div>\r\n              <div className=\"text-center p-4 bg-slate-50 rounded-xl\">\r\n                <div className=\"text-2xl font-bold text-luxury-navy mb-1\">\r\n                  {insights.travelPatterns.bookingLeadTime}\r\n                </div>\r\n                <div className=\"text-sm text-slate-600\">Days in Advance</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Budget Optimization */}\r\n          <div className=\"bg-white rounded-2xl p-6 border border-slate-200 shadow-luxury\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-lg font-semibold text-slate-900 flex items-center gap-2\">\r\n                <DollarSign className=\"w-5 h-5 text-luxury-gold\" />\r\n                Budget Insights\r\n              </h3>\r\n            </div>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div>\r\n                <div className=\"text-sm text-slate-600 mb-1\">Average Nightly Rate</div>\r\n                <div className=\"text-2xl font-bold text-slate-900\">\r\n                  ${Math.round(insights.budgetOptimization.averageNightlyRate).toLocaleString()}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <div className=\"text-sm text-slate-600 mb-1\">Suggested Budget</div>\r\n                <div className=\"text-2xl font-bold text-luxury-gold\">\r\n                  ${Math.round(insights.budgetOptimization.suggestedBudget).toLocaleString()}\r\n                </div>\r\n                <div className=\"text-xs text-slate-500 mt-1\">\r\n                  +10% for better options\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Most Visited Destinations */}\r\n          {insights.travelPatterns.mostVisitedDestinations.length > 0 && (\r\n            <div className=\"bg-white rounded-2xl p-6 border border-slate-200 shadow-luxury\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <h3 className=\"text-lg font-semibold text-slate-900 flex items-center gap-2\">\r\n                  <MapPin className=\"w-5 h-5 text-luxury-gold\" />\r\n                  Top Destinations\r\n                </h3>\r\n              </div>\r\n              <div className=\"space-y-3\">\r\n                {insights.travelPatterns.mostVisitedDestinations.slice(0, 5).map((destination, index) => (\r\n                  <div key={index} className=\"flex items-center gap-3\">\r\n                    <div className=\"w-8 h-8 bg-luxury-navy text-white rounded-full flex items-center justify-center text-sm font-semibold\">\r\n                      {index + 1}\r\n                    </div>\r\n                    <span className=\"text-slate-900\">{destination}</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={`space-y-6 ${className}`}>\r\n      {/* Section Tabs */}\r\n      <div className=\"flex space-x-4 border-b border-slate-200\">\r\n        <button\r\n          onClick={() => setActiveSection('preferences')}\r\n          className={`py-2 px-1 border-b-2 font-medium text-sm transition-colors ${\r\n            activeSection === 'preferences'\r\n              ? 'border-luxury-navy text-luxury-navy'\r\n              : 'border-transparent text-slate-500 hover:text-slate-700 hover:border-slate-300'\r\n          }`}\r\n        >\r\n          <Users className=\"w-4 h-4 inline mr-2\" />\r\n          My Preferences\r\n        </button>\r\n        <button\r\n          onClick={() => setActiveSection('insights')}\r\n          className={`py-2 px-1 border-b-2 font-medium text-sm transition-colors ${\r\n            activeSection === 'insights'\r\n              ? 'border-luxury-navy text-luxury-navy'\r\n              : 'border-transparent text-slate-500 hover:text-slate-700 hover:border-slate-300'\r\n          }`}\r\n        >\r\n          <TrendingUp className=\"w-4 h-4 inline mr-2\" />\r\n          Travel Insights\r\n        </button>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div>\r\n        {activeSection === 'preferences' && renderPreferencesSection()}\r\n        {activeSection === 'insights' && renderInsightsSection()}\r\n      </div>\r\n\r\n      {/* Refresh Button */}\r\n      <div className=\"flex justify-center pt-4\">\r\n        <Button\r\n          variant=\"outline\"\r\n          onClick={loadPersonalizationData}\r\n          disabled={loading}\r\n          className=\"flex items-center gap-2\"\r\n        >\r\n          {loading ? <LoadingSpinner size=\"sm\" /> : <Settings className=\"w-4 h-4\" />}\r\n          Refresh Analysis\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonalizationPreferences;","import React, { useState, useEffect } from 'react';\r\nimport { BarChart3, TrendingUp, MapPin, Calendar, DollarSign, Clock, Star, Target } from 'lucide-react';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { bookingService, type Booking } from '@/services/bookingService';\r\nimport { LoadingSpinner } from '@/components/ui/LoadingSpinner';\r\nimport { Button } from '@/components/ui/Button';\r\nimport { logger } from '@/utils/logger';\r\n\r\ninterface TravelAnalyticsProps {\r\n  className?: string;\r\n}\r\n\r\ninterface AnalyticsData {\r\n  totalBookings: number;\r\n  totalSpent: number;\r\n  averageStayDuration: number;\r\n  totalNights: number;\r\n  uniqueDestinations: number;\r\n  averageAdvanceBooking: number;\r\n  seasonalBreakdown: Record<string, number>;\r\n  monthlySpending: Array<{ month: number; amount: number; count: number }>;\r\n  destinationBreakdown: Array<{ destination: string; count: number; amount: number }>;\r\n  statusBreakdown: Record<string, number>;\r\n  recentTrends: {\r\n    spendingTrend: 'up' | 'down' | 'stable';\r\n    bookingFrequency: 'increasing' | 'decreasing' | 'stable';\r\n    averageStayTrend: 'longer' | 'shorter' | 'stable';\r\n  };\r\n}\r\n\r\nconst TravelAnalytics: React.FC<TravelAnalyticsProps> = ({ className = '' }) => {\r\n  const { user } = useAuth();\r\n  const [analytics, setAnalytics] = useState<AnalyticsData | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [timeframe, setTimeframe] = useState<'all' | '1year' | '6months' | '3months'>('1year');\r\n\r\n  useEffect(() => {\r\n    if (user?.id) {\r\n      loadAnalyticsData();\r\n    }\r\n  }, [user?.id, timeframe]);\r\n\r\n  const loadAnalyticsData = async () => {\r\n    if (!user?.id) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const bookings = await bookingService.getUserBookings(user.id);\r\n\r\n      // Filter bookings based on timeframe\r\n      const filteredBookings = filterBookingsByTimeframe(bookings, timeframe);\r\n      \r\n      const analyticsData = calculateAnalytics(filteredBookings);\r\n      \r\n      setAnalytics(analyticsData);\r\n\r\n      logger.info('Travel analytics loaded successfully', {\r\n        userId: user.id,\r\n        bookingCount: filteredBookings.length,\r\n        timeframe\r\n      });\r\n    } catch (error) {\r\n      logger.error('Failed to load travel analytics:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const filterBookingsByTimeframe = (bookings: Booking[], timeframe: string): Booking[] => {\r\n    if (timeframe === 'all') return bookings;\r\n\r\n    const now = new Date();\r\n    let cutoffDate = new Date();\r\n\r\n    switch (timeframe) {\r\n      case '1year':\r\n        cutoffDate.setFullYear(now.getFullYear() - 1);\r\n        break;\r\n      case '6months':\r\n        cutoffDate.setMonth(now.getMonth() - 6);\r\n        break;\r\n      case '3months':\r\n        cutoffDate.setMonth(now.getMonth() - 3);\r\n        break;\r\n    }\r\n\r\n    return bookings.filter(booking => new Date(booking.createdAt) >= cutoffDate);\r\n  };\r\n\r\n  const calculateAnalytics = (bookings: Booking[]): AnalyticsData => {\r\n    const completedBookings = bookings.filter(b => b.status === 'completed' || b.status === 'confirmed');\r\n\r\n    // Basic metrics\r\n    const totalBookings = bookings.length;\r\n    const totalSpent = completedBookings.reduce((sum, b) => sum + b.totalAmount, 0);\r\n    const totalNights = completedBookings.reduce((sum, b) => sum + b.nights, 0);\r\n    const averageStayDuration = completedBookings.length > 0 ? Math.round(totalNights / completedBookings.length) : 0;\r\n\r\n    // Unique destinations\r\n    const destinations = new Set(completedBookings.map(b => b.hotelCity).filter(city => city));\r\n    const uniqueDestinations = destinations.size;\r\n\r\n    // Average advance booking\r\n    const advanceBookingDays = bookings.map(b => {\r\n      const bookingDate = new Date(b.createdAt);\r\n      const checkInDate = new Date(b.checkIn);\r\n      return Math.floor((checkInDate.getTime() - bookingDate.getTime()) / (1000 * 60 * 60 * 24));\r\n    });\r\n    const averageAdvanceBooking = advanceBookingDays.length > 0\r\n      ? Math.round(advanceBookingDays.reduce((sum, days) => sum + days, 0) / advanceBookingDays.length)\r\n      : 0;\r\n\r\n    // Seasonal breakdown\r\n    const seasonalBreakdown = completedBookings.reduce((acc: Record<string, number>, booking) => {\r\n      const month = new Date(booking.checkIn).getMonth();\r\n      let season = 'Spring';\r\n      if (month >= 2 && month <= 4) season = 'Spring';\r\n      else if (month >= 5 && month <= 7) season = 'Summer';\r\n      else if (month >= 8 && month <= 10) season = 'Fall';\r\n      else season = 'Winter';\r\n      \r\n      acc[season] = (acc[season] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    // Monthly spending\r\n    const monthlySpending = Array.from({ length: 12 }, (_, index) => {\r\n      const monthBookings = completedBookings.filter(b => new Date(b.checkIn).getMonth() === index);\r\n      return {\r\n        month: index,\r\n        amount: monthBookings.reduce((sum, b) => sum + b.totalAmount, 0),\r\n        count: monthBookings.length\r\n      };\r\n    }).filter(month => month.count > 0);\r\n\r\n    // Destination breakdown\r\n    const destinationCounts = completedBookings.reduce((acc: Record<string, { count: number; amount: number }>, booking) => {\r\n      const destination = booking.hotelCity || 'Unknown';\r\n      if (!acc[destination]) {\r\n        acc[destination] = { count: 0, amount: 0 };\r\n      }\r\n      acc[destination].count += 1;\r\n      acc[destination].amount += booking.totalAmount;\r\n      return acc;\r\n    }, {});\r\n\r\n    const destinationBreakdown = Object.entries(destinationCounts)\r\n      .map(([destination, data]) => ({ destination, ...data }))\r\n      .sort((a, b) => b.count - a.count)\r\n      .slice(0, 10);\r\n\r\n    // Status breakdown\r\n    const statusBreakdown = bookings.reduce((acc: Record<string, number>, booking) => {\r\n      acc[booking.status] = (acc[booking.status] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    // Calculate trends\r\n    const recentBookings = bookings.slice(0, Math.floor(bookings.length / 2));\r\n    const olderBookings = bookings.slice(Math.floor(bookings.length / 2));\r\n\r\n    const recentAvgSpending = recentBookings.length > 0 \r\n      ? recentBookings.reduce((sum, b) => sum + b.totalAmount, 0) / recentBookings.length\r\n      : 0;\r\n    const olderAvgSpending = olderBookings.length > 0\r\n      ? olderBookings.reduce((sum, b) => sum + b.totalAmount, 0) / olderBookings.length\r\n      : 0;\r\n\r\n    const spendingTrend = recentAvgSpending > olderAvgSpending * 1.1 ? 'up' \r\n                        : recentAvgSpending < olderAvgSpending * 0.9 ? 'down' \r\n                        : 'stable';\r\n\r\n    const bookingFrequency = recentBookings.length > olderBookings.length ? 'increasing' \r\n                           : recentBookings.length < olderBookings.length ? 'decreasing' \r\n                           : 'stable';\r\n\r\n    const recentAvgStay = recentBookings.length > 0 \r\n      ? recentBookings.reduce((sum, b) => sum + b.nights, 0) / recentBookings.length\r\n      : 0;\r\n    const olderAvgStay = olderBookings.length > 0\r\n      ? olderBookings.reduce((sum, b) => sum + b.nights, 0) / olderBookings.length\r\n      : 0;\r\n\r\n    const averageStayTrend = recentAvgStay > olderAvgStay * 1.2 ? 'longer'\r\n                           : recentAvgStay < olderAvgStay * 0.8 ? 'shorter'\r\n                           : 'stable';\r\n\r\n    return {\r\n      totalBookings,\r\n      totalSpent,\r\n      averageStayDuration,\r\n      totalNights,\r\n      uniqueDestinations,\r\n      averageAdvanceBooking,\r\n      seasonalBreakdown,\r\n      monthlySpending,\r\n      destinationBreakdown,\r\n      statusBreakdown,\r\n      recentTrends: {\r\n        spendingTrend,\r\n        bookingFrequency,\r\n        averageStayTrend\r\n      }\r\n    };\r\n  };\r\n\r\n  const formatCurrency = (amount: number) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 0\r\n    }).format(amount);\r\n  };\r\n\r\n\r\n  const getTrendIcon = (trend: string) => {\r\n    switch (trend) {\r\n      case 'up':\r\n      case 'increasing':\r\n      case 'longer':\r\n        return <TrendingUp className=\"w-4 h-4 text-green-600\" />;\r\n      case 'down':\r\n      case 'decreasing':\r\n      case 'shorter':\r\n        return <TrendingUp className=\"w-4 h-4 text-red-600 rotate-180\" />;\r\n      default:\r\n        return <TrendingUp className=\"w-4 h-4 text-gray-600\" />;\r\n    }\r\n  };\r\n\r\n  const getTrendColor = (trend: string) => {\r\n    switch (trend) {\r\n      case 'up':\r\n      case 'increasing':\r\n      case 'longer':\r\n        return 'text-green-600';\r\n      case 'down':\r\n      case 'decreasing':\r\n      case 'shorter':\r\n        return 'text-red-600';\r\n      default:\r\n        return 'text-gray-600';\r\n    }\r\n  };\r\n\r\n  if (!user) {\r\n    return (\r\n      <div className={`text-center py-12 ${className}`}>\r\n        <div className=\"bg-gradient-to-br from-slate-50 to-cream-50 rounded-2xl p-8 border border-slate-200\">\r\n          <BarChart3 className=\"w-16 h-16 text-slate-400 mx-auto mb-4\" />\r\n          <h3 className=\"text-xl font-semibold text-slate-800 mb-2\">Sign in to view analytics</h3>\r\n          <p className=\"text-slate-600\">Access detailed insights about your travel patterns and spending</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={`flex justify-center py-12 ${className}`}>\r\n        <LoadingSpinner size=\"lg\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!analytics || analytics.totalBookings === 0) {\r\n    return (\r\n      <div className={`text-center py-12 ${className}`}>\r\n        <div className=\"bg-gradient-to-br from-slate-50 to-cream-50 rounded-2xl p-8 border border-slate-200\">\r\n          <BarChart3 className=\"w-16 h-16 text-slate-400 mx-auto mb-4\" />\r\n          <h3 className=\"text-xl font-semibold text-slate-800 mb-2\">\r\n            No travel data yet\r\n          </h3>\r\n          <p className=\"text-slate-600 mb-6\">\r\n            Start booking to see detailed analytics about your travel patterns and preferences.\r\n          </p>\r\n          <Button size=\"lg\" onClick={loadAnalyticsData}>\r\n            Refresh Data\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`space-y-6 ${className}`}>\r\n      {/* Timeframe Filter */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <h2 className=\"text-2xl font-bold bg-gradient-to-r from-slate-800 to-slate-600 bg-clip-text text-transparent\">\r\n          Travel Analytics\r\n        </h2>\r\n        <div className=\"flex gap-2\">\r\n          {[\r\n            { value: '3months', label: '3M' },\r\n            { value: '6months', label: '6M' },\r\n            { value: '1year', label: '1Y' },\r\n            { value: 'all', label: 'All' }\r\n          ].map((option) => (\r\n            <button\r\n              key={option.value}\r\n              onClick={() => setTimeframe(option.value as any)}\r\n              className={`px-3 py-1 text-sm rounded-lg transition-colors ${\r\n                timeframe === option.value\r\n                  ? 'bg-luxury-navy text-white'\r\n                  : 'bg-slate-100 text-slate-700 hover:bg-slate-200'\r\n              }`}\r\n            >\r\n              {option.label}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Key Metrics Grid */}\r\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\r\n        <div className=\"bg-white rounded-2xl p-6 border border-slate-200 shadow-luxury\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <Calendar className=\"w-5 h-5 text-luxury-navy\" />\r\n            {getTrendIcon(analytics.recentTrends.bookingFrequency)}\r\n          </div>\r\n          <div className=\"text-2xl font-bold text-luxury-navy mb-1\">\r\n            {analytics.totalBookings}\r\n          </div>\r\n          <div className=\"text-sm text-slate-600\">Total Bookings</div>\r\n          <div className={`text-xs mt-1 ${getTrendColor(analytics.recentTrends.bookingFrequency)}`}>\r\n            {analytics.recentTrends.bookingFrequency}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-2xl p-6 border border-slate-200 shadow-luxury\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <DollarSign className=\"w-5 h-5 text-luxury-gold\" />\r\n            {getTrendIcon(analytics.recentTrends.spendingTrend)}\r\n          </div>\r\n          <div className=\"text-2xl font-bold text-luxury-gold mb-1\">\r\n            {formatCurrency(analytics.totalSpent)}\r\n          </div>\r\n          <div className=\"text-sm text-slate-600\">Total Spent</div>\r\n          <div className={`text-xs mt-1 ${getTrendColor(analytics.recentTrends.spendingTrend)}`}>\r\n            spending trend {analytics.recentTrends.spendingTrend}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-2xl p-6 border border-slate-200 shadow-luxury\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <Clock className=\"w-5 h-5 text-blue-600\" />\r\n            {getTrendIcon(analytics.recentTrends.averageStayTrend)}\r\n          </div>\r\n          <div className=\"text-2xl font-bold text-blue-600 mb-1\">\r\n            {analytics.averageStayDuration}\r\n          </div>\r\n          <div className=\"text-sm text-slate-600\">Avg. Stay (nights)</div>\r\n          <div className={`text-xs mt-1 ${getTrendColor(analytics.recentTrends.averageStayTrend)}`}>\r\n            stays getting {analytics.recentTrends.averageStayTrend}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-2xl p-6 border border-slate-200 shadow-luxury\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <MapPin className=\"w-5 h-5 text-green-600\" />\r\n          </div>\r\n          <div className=\"text-2xl font-bold text-green-600 mb-1\">\r\n            {analytics.uniqueDestinations}\r\n          </div>\r\n          <div className=\"text-sm text-slate-600\">Destinations</div>\r\n          <div className=\"text-xs text-slate-500 mt-1\">\r\n            {analytics.totalNights} total nights\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Top Destinations */}\r\n      {analytics.destinationBreakdown.length > 0 && (\r\n        <div className=\"bg-white rounded-2xl p-6 border border-slate-200 shadow-luxury\">\r\n          <h3 className=\"text-lg font-semibold text-slate-900 mb-4 flex items-center gap-2\">\r\n            <Target className=\"w-5 h-5 text-luxury-gold\" />\r\n            Top Destinations\r\n          </h3>\r\n          <div className=\"space-y-3\">\r\n            {analytics.destinationBreakdown.slice(0, 5).map((destination, index) => (\r\n              <div key={destination.destination} className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <div className=\"w-8 h-8 bg-luxury-navy text-white rounded-full flex items-center justify-center text-sm font-semibold\">\r\n                    {index + 1}\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"font-medium text-slate-900\">{destination.destination}</div>\r\n                    <div className=\"text-sm text-slate-600\">{destination.count} booking{destination.count > 1 ? 's' : ''}</div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <div className=\"font-semibold text-luxury-gold\">\r\n                    {formatCurrency(destination.amount)}\r\n                  </div>\r\n                  <div className=\"text-sm text-slate-600\">\r\n                    {formatCurrency(destination.amount / destination.count)} avg\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Seasonal and Monthly Patterns */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        {/* Seasonal Breakdown */}\r\n        {Object.keys(analytics.seasonalBreakdown).length > 0 && (\r\n          <div className=\"bg-white rounded-2xl p-6 border border-slate-200 shadow-luxury\">\r\n            <h3 className=\"text-lg font-semibold text-slate-900 mb-4 flex items-center gap-2\">\r\n              <Calendar className=\"w-5 h-5 text-luxury-gold\" />\r\n              Seasonal Preferences\r\n            </h3>\r\n            <div className=\"space-y-3\">\r\n              {Object.entries(analytics.seasonalBreakdown)\r\n                .sort(([,a], [,b]) => b - a)\r\n                .map(([season, count]) => (\r\n                  <div key={season} className=\"flex items-center justify-between\">\r\n                    <span className=\"text-slate-900\">{season}</span>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <div className=\"w-20 bg-slate-200 rounded-full h-2\">\r\n                        <div \r\n                          className=\"bg-luxury-navy h-2 rounded-full\"\r\n                          style={{ width: `${(count / Math.max(...Object.values(analytics.seasonalBreakdown))) * 100}%` }}\r\n                        />\r\n                      </div>\r\n                      <span className=\"text-sm font-medium text-slate-700 w-8\">{count}</span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Booking Insights */}\r\n        <div className=\"bg-white rounded-2xl p-6 border border-slate-200 shadow-luxury\">\r\n          <h3 className=\"text-lg font-semibold text-slate-900 mb-4 flex items-center gap-2\">\r\n            <Star className=\"w-5 h-5 text-luxury-gold\" />\r\n            Booking Insights\r\n          </h3>\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-slate-600\">Average advance booking</span>\r\n              <span className=\"font-semibold text-slate-900\">\r\n                {analytics.averageAdvanceBooking} days\r\n              </span>\r\n            </div>\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-slate-600\">Average per night</span>\r\n              <span className=\"font-semibold text-slate-900\">\r\n                {formatCurrency(analytics.totalSpent / Math.max(analytics.totalNights, 1))}\r\n              </span>\r\n            </div>\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-slate-600\">Average per booking</span>\r\n              <span className=\"font-semibold text-slate-900\">\r\n                {formatCurrency(analytics.totalSpent / Math.max(analytics.totalBookings, 1))}\r\n              </span>\r\n            </div>\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-slate-600\">Completion rate</span>\r\n              <span className=\"font-semibold text-slate-900\">\r\n                {Math.round((analytics.statusBreakdown.completed || 0) / analytics.totalBookings * 100)}%\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Refresh Button */}\r\n      <div className=\"flex justify-center\">\r\n        <Button\r\n          variant=\"outline\"\r\n          onClick={loadAnalyticsData}\r\n          className=\"flex items-center gap-2\"\r\n        >\r\n          <BarChart3 className=\"w-4 h-4\" />\r\n          Refresh Analytics\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TravelAnalytics;","import React, { useState } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { Link } from 'react-router-dom';\r\nimport { User, Mail, Phone, Calendar, MapPin, Heart, Award, Clock, Settings, ChevronRight, BarChart3 } from 'lucide-react';\r\nimport { Layout } from '@/components/layout/Layout';\r\nimport { Button } from '@/components/ui/Button';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport BookingHistory from '@/components/booking/BookingHistory';\r\nimport PersonalizationPreferences from '@/components/user/PersonalizationPreferences';\r\nimport TravelAnalytics from '@/components/analytics/TravelAnalytics';\r\n\r\nconst UserProfilePage: React.FC = () => {\r\n  const { user, isAuthenticated } = useAuth();\r\n  const [activeTab, setActiveTab] = useState<'profile' | 'bookings' | 'preferences' | 'analytics'>('profile');\r\n\r\n  if (!isAuthenticated || !user) {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>Sign In Required - Vibe Hotel Booking</title>\r\n          <meta name=\"robots\" content=\"noindex, nofollow\" />\r\n        </Helmet>\r\n\r\n        <Layout>\r\n          <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-cream-50 to-slate-100 flex items-center justify-center\">\r\n            <div className=\"bg-white rounded-2xl p-8 border border-slate-200 shadow-luxury-lg max-w-md w-full mx-4\">\r\n              <div className=\"text-center\">\r\n                <User className=\"w-16 h-16 text-slate-400 mx-auto mb-4\" />\r\n                <h2 className=\"text-2xl font-bold text-slate-900 mb-2\">Sign In Required</h2>\r\n                <p className=\"text-slate-600 mb-6\">\r\n                  Please sign in to access your profile and booking history.\r\n                </p>\r\n                <Link to=\"/\">\r\n                  <Button size=\"lg\" className=\"w-full\">\r\n                    Back to Home\r\n                  </Button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Layout>\r\n      </>\r\n    );\r\n  }\r\n\r\n  const renderProfileTab = () => (\r\n    <div className=\"space-y-6\">\r\n      {/* Profile Header */}\r\n      <div className=\"bg-gradient-to-br from-slate-50 to-cream-50 rounded-2xl p-6 border border-slate-200\">\r\n        <div className=\"flex items-start justify-between\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <div className=\"h-20 w-20 bg-gradient-to-r from-slate-700 to-slate-800 rounded-full flex items-center justify-center text-white text-2xl font-bold\">\r\n              {user.firstName?.[0]}{user.lastName?.[0]}\r\n            </div>\r\n            <div>\r\n              <h2 className=\"text-2xl font-bold text-slate-900\">\r\n                {user.firstName} {user.lastName}\r\n              </h2>\r\n              <p className=\"text-slate-600\">{user.email}</p>\r\n              <div className=\"flex items-center mt-2 text-sm text-slate-500\">\r\n                <Calendar className=\"w-4 h-4 mr-1\" />\r\n                Member since {new Date().toLocaleDateString('en-US', { month: 'long', year: 'numeric' })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Button variant=\"outline\" size=\"sm\" className=\"flex items-center gap-2\">\r\n            <Settings className=\"w-4 h-4\" />\r\n            Edit Profile\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Account Statistics */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n        <div className=\"bg-white rounded-2xl p-6 border border-slate-200 shadow-luxury\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <h3 className=\"text-lg font-semibold text-slate-900\">Total Bookings</h3>\r\n            <Clock className=\"w-5 h-5 text-luxury-navy\" />\r\n          </div>\r\n          <div className=\"text-3xl font-bold text-luxury-navy mb-1\">0</div>\r\n          <p className=\"text-sm text-slate-600\">Lifetime reservations</p>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-2xl p-6 border border-slate-200 shadow-luxury\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <h3 className=\"text-lg font-semibold text-slate-900\">Rewards Points</h3>\r\n            <Award className=\"w-5 h-5 text-luxury-gold\" />\r\n          </div>\r\n          <div className=\"text-3xl font-bold text-luxury-gold mb-1\">2,450</div>\r\n          <p className=\"text-sm text-slate-600\">Available points</p>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-2xl p-6 border border-slate-200 shadow-luxury\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <h3 className=\"text-lg font-semibold text-slate-900\">Saved Hotels</h3>\r\n            <Heart className=\"w-5 h-5 text-red-500\" />\r\n          </div>\r\n          <div className=\"text-3xl font-bold text-red-500 mb-1\">5</div>\r\n          <p className=\"text-sm text-slate-600\">In wishlist</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Account Information */}\r\n      <div className=\"bg-white rounded-2xl border border-slate-200 shadow-luxury\">\r\n        <div className=\"p-6 border-b border-slate-200\">\r\n          <h3 className=\"text-xl font-semibold text-slate-900\">Account Information</h3>\r\n        </div>\r\n        <div className=\"p-6 space-y-4\">\r\n          <div className=\"flex items-center justify-between py-3\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <Mail className=\"w-5 h-5 text-slate-400\" />\r\n              <div>\r\n                <div className=\"font-medium text-slate-900\">Email Address</div>\r\n                <div className=\"text-sm text-slate-600\">{user.email}</div>\r\n              </div>\r\n            </div>\r\n            <ChevronRight className=\"w-5 h-5 text-slate-400\" />\r\n          </div>\r\n          \r\n          <div className=\"flex items-center justify-between py-3\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <Phone className=\"w-5 h-5 text-slate-400\" />\r\n              <div>\r\n                <div className=\"font-medium text-slate-900\">Phone Number</div>\r\n                <div className=\"text-sm text-slate-600\">{'Not provided'}</div>\r\n              </div>\r\n            </div>\r\n            <ChevronRight className=\"w-5 h-5 text-slate-400\" />\r\n          </div>\r\n          \r\n          <div className=\"flex items-center justify-between py-3\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <MapPin className=\"w-5 h-5 text-slate-400\" />\r\n              <div>\r\n                <div className=\"font-medium text-slate-900\">Location</div>\r\n                <div className=\"text-sm text-slate-600\">{'Not specified'}</div>\r\n              </div>\r\n            </div>\r\n            <ChevronRight className=\"w-5 h-5 text-slate-400\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Quick Actions */}\r\n      <div className=\"bg-white rounded-2xl border border-slate-200 shadow-luxury\">\r\n        <div className=\"p-6 border-b border-slate-200\">\r\n          <h3 className=\"text-xl font-semibold text-slate-900\">Quick Actions</h3>\r\n        </div>\r\n        <div className=\"p-6 space-y-3\">\r\n          <Link\r\n            to=\"/my-bookings\"\r\n            className=\"flex items-center justify-between p-4 rounded-xl bg-slate-50 hover:bg-slate-100 transition-colors\"\r\n          >\r\n            <div className=\"flex items-center space-x-3\">\r\n              <Clock className=\"w-5 h-5 text-luxury-navy\" />\r\n              <span className=\"font-medium text-slate-900\">View My Bookings</span>\r\n            </div>\r\n            <ChevronRight className=\"w-5 h-5 text-slate-400\" />\r\n          </Link>\r\n          \r\n          <button className=\"flex items-center justify-between w-full p-4 rounded-xl bg-slate-50 hover:bg-slate-100 transition-colors\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <Heart className=\"w-5 h-5 text-red-500\" />\r\n              <span className=\"font-medium text-slate-900\">Manage Favorites</span>\r\n            </div>\r\n            <ChevronRight className=\"w-5 h-5 text-slate-400\" />\r\n          </button>\r\n          \r\n          <button className=\"flex items-center justify-between w-full p-4 rounded-xl bg-slate-50 hover:bg-slate-100 transition-colors\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <Award className=\"w-5 h-5 text-luxury-gold\" />\r\n              <span className=\"font-medium text-slate-900\">Rewards Program</span>\r\n            </div>\r\n            <ChevronRight className=\"w-5 h-5 text-slate-400\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>My Profile - {user.firstName} {user.lastName} - Vibe Hotel Booking</title>\r\n        <meta \r\n          name=\"description\" \r\n          content=\"Manage your profile, view booking history, and update your travel preferences.\" \r\n        />\r\n        <meta name=\"robots\" content=\"noindex, nofollow\" />\r\n      </Helmet>\r\n\r\n      <Layout>\r\n        <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-cream-50 to-slate-100\">\r\n          <div className=\"container mx-auto px-4 py-8\">\r\n            {/* Tab Navigation */}\r\n            <div className=\"mb-8\">\r\n              <div className=\"border-b border-slate-200\">\r\n                <nav className=\"flex space-x-8\">\r\n                  <button\r\n                    onClick={() => setActiveTab('profile')}\r\n                    className={`py-2 px-1 border-b-2 font-medium text-sm transition-colors ${\r\n                      activeTab === 'profile'\r\n                        ? 'border-luxury-navy text-luxury-navy'\r\n                        : 'border-transparent text-slate-500 hover:text-slate-700 hover:border-slate-300'\r\n                    }`}\r\n                  >\r\n                    Profile\r\n                  </button>\r\n                  <button\r\n                    onClick={() => setActiveTab('bookings')}\r\n                    className={`py-2 px-1 border-b-2 font-medium text-sm transition-colors ${\r\n                      activeTab === 'bookings'\r\n                        ? 'border-luxury-navy text-luxury-navy'\r\n                        : 'border-transparent text-slate-500 hover:text-slate-700 hover:border-slate-300'\r\n                    }`}\r\n                  >\r\n                    My Bookings\r\n                  </button>\r\n                  <button\r\n                    onClick={() => setActiveTab('preferences')}\r\n                    className={`py-2 px-1 border-b-2 font-medium text-sm transition-colors ${\r\n                      activeTab === 'preferences'\r\n                        ? 'border-luxury-navy text-luxury-navy'\r\n                        : 'border-transparent text-slate-500 hover:text-slate-700 hover:border-slate-300'\r\n                    }`}\r\n                  >\r\n                    Preferences\r\n                  </button>\r\n                  <button\r\n                    onClick={() => setActiveTab('analytics')}\r\n                    className={`py-2 px-1 border-b-2 font-medium text-sm transition-colors ${\r\n                      activeTab === 'analytics'\r\n                        ? 'border-luxury-navy text-luxury-navy'\r\n                        : 'border-transparent text-slate-500 hover:text-slate-700 hover:border-slate-300'\r\n                    }`}\r\n                  >\r\n                    <BarChart3 className=\"w-4 h-4 inline mr-2\" />\r\n                    Analytics\r\n                  </button>\r\n                </nav>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Tab Content */}\r\n            <div>\r\n              {activeTab === 'profile' && renderProfileTab()}\r\n              {activeTab === 'bookings' && <BookingHistory />}\r\n              {activeTab === 'preferences' && <PersonalizationPreferences />}\r\n              {activeTab === 'analytics' && <TravelAnalytics />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserProfilePage;"],"names":["PersonalizationService","userId","bookings","bookingService","logger","amounts","b","budgetRange","stayDurations","averageStayDuration","sum","nights","advanceBookingTimes","bookingDate","checkInDate","averageAdvanceBooking","days","regionCounts","city","acc","preferredRegions","averageAmount","amount","travelStyle","dayPreferences","day","preferredDaysOfWeek","preferences","error","completedBookings","destinationCounts","booking","destination","mostVisitedDestinations","a","averageNightlyRate","suggestedBudget","insights","hotelTypes","amenities","categories","cityCategories","region","regionCategories","seasonCounts","month","season","monthlySpending","updatedPrefs","stored","personalizationService","PersonalizationPreferences","className","user","useAuth","setPreferences","useState","setInsights","loading","setLoading","activeSection","setActiveSection","useEffect","loadPersonalizationData","userPrefs","userInsights","formatBudgetRange","min","max","currency","formatter","getTravelStyleColor","style","jsx","LoadingSpinner","jsxs","Settings","Button","renderPreferencesSection","Fragment","Star","DollarSign","MapPin","index","Calendar","Heart","category","renderInsightsSection","TrendingUp","Users","TravelAnalytics","analytics","setAnalytics","timeframe","setTimeframe","loadAnalyticsData","filteredBookings","filterBookingsByTimeframe","analyticsData","calculateAnalytics","now","cutoffDate","totalBookings","totalSpent","totalNights","uniqueDestinations","advanceBookingDays","seasonalBreakdown","_","monthBookings","destinationBreakdown","data","statusBreakdown","recentBookings","olderBookings","recentAvgSpending","olderAvgSpending","spendingTrend","bookingFrequency","recentAvgStay","olderAvgStay","averageStayTrend","formatCurrency","getTrendIcon","trend","getTrendColor","BarChart3","option","Clock","Target","count","UserProfilePage","isAuthenticated","activeTab","setActiveTab","Helmet","Layout","User","Link","renderProfileTab","Award","Mail","ChevronRight","Phone","BookingHistory"],"mappings":"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"}