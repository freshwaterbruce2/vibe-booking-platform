{"version":3,"file":"UrgencyIndicator-DsGkK3UM.js","sources":["../../src/components/ui/TrustBadge.tsx","../../src/components/ui/UrgencyIndicator.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Shield, Star, Clock, Users, Zap, Heart } from 'lucide-react';\r\nimport { cn } from '@/utils/cn';\r\n\r\ninterface TrustBadgeProps {\r\n  type: 'security' | 'rating' | 'speed' | 'popular' | 'instant' | 'favorite';\r\n  text: string;\r\n  subtext?: string;\r\n  className?: string;\r\n}\r\n\r\nconst badgeConfig = {\r\n  security: {\r\n    icon: Shield,\r\n    color: 'text-emerald-600',\r\n    bgColor: 'bg-emerald-50',\r\n    borderColor: 'border-emerald-200',\r\n  },\r\n  rating: {\r\n    icon: Star,\r\n    color: 'text-yellow-600',\r\n    bgColor: 'bg-yellow-50',\r\n    borderColor: 'border-yellow-200',\r\n  },\r\n  speed: {\r\n    icon: Zap,\r\n    color: 'text-blue-600',\r\n    bgColor: 'bg-blue-50',\r\n    borderColor: 'border-blue-200',\r\n  },\r\n  popular: {\r\n    icon: Users,\r\n    color: 'text-purple-600',\r\n    bgColor: 'bg-purple-50',\r\n    borderColor: 'border-purple-200',\r\n  },\r\n  instant: {\r\n    icon: Clock,\r\n    color: 'text-green-600',\r\n    bgColor: 'bg-green-50',\r\n    borderColor: 'border-green-200',\r\n  },\r\n  favorite: {\r\n    icon: Heart,\r\n    color: 'text-primary',\r\n    bgColor: 'bg-primary-50',\r\n    borderColor: 'border-primary-200',\r\n  },\r\n};\r\n\r\nexport const TrustBadge: React.FC<TrustBadgeProps> = ({\r\n  type,\r\n  text,\r\n  subtext,\r\n  className,\r\n}) => {\r\n  const config = badgeConfig[type];\r\n  const IconComponent = config.icon;\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        'inline-flex items-center gap-2 px-3 py-2 rounded-full border text-sm font-medium',\r\n        config.bgColor,\r\n        config.borderColor,\r\n        config.color,\r\n        className,\r\n      )}\r\n    >\r\n      <IconComponent className=\"w-4 h-4\" />\r\n      <span>{text}</span>\r\n      {subtext && (\r\n        <span className=\"text-xs opacity-75\">â€¢ {subtext}</span>\r\n      )}\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport { Eye, Clock, TrendingUp, Users } from 'lucide-react';\r\nimport { cn } from '@/utils/cn';\r\n\r\ninterface UrgencyIndicatorProps {\r\n  type: 'viewing' | 'recently_booked' | 'trending' | 'limited';\r\n  count?: number;\r\n  timeframe?: string;\r\n  className?: string;\r\n}\r\n\r\nconst urgencyConfig = {\r\n  viewing: {\r\n    icon: Eye,\r\n    color: 'text-orange-600',\r\n    bgColor: 'bg-orange-50',\r\n    borderColor: 'border-orange-200',\r\n    getText: (count: number) => `${count} people viewing`,\r\n  },\r\n  recently_booked: {\r\n    icon: Clock,\r\n    color: 'text-green-600',\r\n    bgColor: 'bg-green-50',\r\n    borderColor: 'border-green-200',\r\n    getText: (_count: number, timeframe?: string) => `Booked ${timeframe || '2 hours ago'}`,\r\n  },\r\n  trending: {\r\n    icon: TrendingUp,\r\n    color: 'text-purple-600',\r\n    bgColor: 'bg-purple-50',\r\n    borderColor: 'border-purple-200',\r\n    getText: () => 'Trending today',\r\n  },\r\n  limited: {\r\n    icon: Users,\r\n    color: 'text-red-600',\r\n    bgColor: 'bg-red-50',\r\n    borderColor: 'border-red-200',\r\n    getText: (count: number) => `Only ${count} rooms left`,\r\n  },\r\n};\r\n\r\nexport const UrgencyIndicator: React.FC<UrgencyIndicatorProps> = ({\r\n  type,\r\n  count = 0,\r\n  timeframe,\r\n  className,\r\n}) => {\r\n  const config = urgencyConfig[type];\r\n  const IconComponent = config.icon;\r\n  const text = config.getText(count, timeframe);\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        'inline-flex items-center gap-2 px-3 py-1.5 rounded-full border text-sm font-medium animate-pulse',\r\n        config.bgColor,\r\n        config.borderColor,\r\n        config.color,\r\n        className,\r\n      )}\r\n    >\r\n      <IconComponent className=\"w-3.5 h-3.5\" />\r\n      <span>{text}</span>\r\n    </div>\r\n  );\r\n};"],"names":["badgeConfig","Shield","Star","Zap","Users","Clock","Heart","TrustBadge","type","text","subtext","className","config","IconComponent","jsxs","cn","jsx","urgencyConfig","Eye","count","_count","timeframe","TrendingUp","UrgencyIndicator"],"mappings":"sIAWA,MAAMA,EAAc,CAClB,SAAU,CACR,KAAMC,EACN,MAAO,mBACP,QAAS,gBACT,YAAa,oBAAA,EAEf,OAAQ,CACN,KAAMC,EACN,MAAO,kBACP,QAAS,eACT,YAAa,mBAAA,EAEf,MAAO,CACL,KAAMC,EACN,MAAO,gBACP,QAAS,aACT,YAAa,iBAAA,EAEf,QAAS,CACP,KAAMC,EACN,MAAO,kBACP,QAAS,eACT,YAAa,mBAAA,EAEf,QAAS,CACP,KAAMC,EACN,MAAO,iBACP,QAAS,cACT,YAAa,kBAAA,EAEf,SAAU,CACR,KAAMC,EACN,MAAO,eACP,QAAS,gBACT,YAAa,oBAAA,CAEjB,EAEaC,EAAwC,CAAC,CACpD,KAAAC,EACA,KAAAC,EACA,QAAAC,EACA,UAAAC,CACF,IAAM,CACJ,MAAMC,EAASZ,EAAYQ,CAAI,EACzBK,EAAgBD,EAAO,KAE7B,OACEE,EAAAA,KAAC,MAAA,CACC,UAAWC,EACT,mFACAH,EAAO,QACPA,EAAO,YACPA,EAAO,MACPD,CAAA,EAGF,SAAA,CAAAK,EAAAA,IAACH,EAAA,CAAc,UAAU,SAAA,CAAU,EACnCG,EAAAA,IAAC,QAAM,SAAAP,CAAA,CAAK,EACXC,GACCI,EAAAA,KAAC,OAAA,CAAK,UAAU,qBAAqB,SAAA,CAAA,KAAGJ,CAAA,CAAA,CAAQ,CAAA,CAAA,CAAA,CAIxD,ECjEMO,EAAgB,CACpB,QAAS,CACP,KAAMC,EACN,MAAO,kBACP,QAAS,eACT,YAAa,oBACb,QAAUC,GAAkB,GAAGA,CAAK,iBAAA,EAEtC,gBAAiB,CACf,KAAMd,EACN,MAAO,iBACP,QAAS,cACT,YAAa,mBACb,QAAS,CAACe,EAAgBC,IAAuB,UAAUA,GAAa,aAAa,EAAA,EAEvF,SAAU,CACR,KAAMC,EACN,MAAO,kBACP,QAAS,eACT,YAAa,oBACb,QAAS,IAAM,gBAAA,EAEjB,QAAS,CACP,KAAMlB,EACN,MAAO,eACP,QAAS,YACT,YAAa,iBACb,QAAUe,GAAkB,QAAQA,CAAK,aAAA,CAE7C,EAEaI,EAAoD,CAAC,CAChE,KAAAf,EACA,MAAAW,EAAQ,EACR,UAAAE,EACA,UAAAV,CACF,IAAM,CACJ,MAAMC,EAASK,EAAcT,CAAI,EAC3BK,EAAgBD,EAAO,KACvBH,EAAOG,EAAO,QAAQO,EAAOE,CAAS,EAE5C,OACEP,EAAAA,KAAC,MAAA,CACC,UAAWC,EACT,mGACAH,EAAO,QACPA,EAAO,YACPA,EAAO,MACPD,CAAA,EAGF,SAAA,CAAAK,EAAAA,IAACH,EAAA,CAAc,UAAU,aAAA,CAAc,EACvCG,EAAAA,IAAC,QAAM,SAAAP,CAAA,CAAK,CAAA,CAAA,CAAA,CAGlB"}