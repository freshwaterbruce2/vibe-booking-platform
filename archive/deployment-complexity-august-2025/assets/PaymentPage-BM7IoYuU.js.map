{"version":3,"file":"PaymentPage-BM7IoYuU.js","sources":["../../src/pages/PaymentPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { SquarePaymentForm } from '../components/payment/SquarePaymentForm';\r\nimport { PaymentService } from '@/domain/payments';\r\nimport { BookingService } from '@/domain/booking';\r\nimport { toast } from 'sonner';\r\nimport { ArrowLeft, CheckCircle, XCircle, AlertTriangle } from 'lucide-react';\r\n\r\ninterface BookingDetails {\r\n  id: string;\r\n  confirmationNumber: string;\r\n  hotelName: string;\r\n  roomType: string;\r\n  checkIn: Date;\r\n  checkOut: Date;\r\n  guests: number;\r\n  nights: number;\r\n  totalAmount: number;\r\n  currency: string;\r\n  guestFirstName: string;\r\n  guestLastName: string;\r\n  guestEmail: string;\r\n  guestPhone: string;\r\n  status: string;\r\n  paymentStatus: string;\r\n}\r\n\r\n// Raw booking shape returned by BookingService (extend safely with optionals)\r\ninterface RawBooking {\r\n  id: string;\r\n  confirmationNumber?: string;\r\n  hotelName: string;\r\n  checkIn: string | Date;\r\n  checkOut: string | Date;\r\n  guests?: number;\r\n  totalAmount: number;\r\n  status: string;\r\n  roomType?: string;\r\n  nights?: number;\r\n  currency?: string;\r\n  guestFirstName?: string;\r\n  guestLastName?: string;\r\n  guestEmail?: string;\r\n  guestPhone?: string;\r\n  paymentStatus?: string;\r\n}\r\n\r\nexport const PaymentPage: React.FC = () => {\r\n  const { bookingId } = useParams<{ bookingId: string }>();\r\n  const navigate = useNavigate();\r\n\r\n  const [booking, setBooking] = useState<BookingDetails | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string>('');\r\n  const [paymentStatus, setPaymentStatus] = useState<'idle' | 'processing' | 'success' | 'error'>('idle');\r\n\r\n  // Legacy Stripe payment_intent URL parameter handling removed.\r\n\r\n  const loadBookingDetails = useCallback(async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      if (!bookingId) {\r\n        return;\r\n      }\r\n      const bookingData: RawBooking | null = await BookingService.getBooking(bookingId);\r\n\r\n      if (!bookingData) {\r\n        throw new Error('Booking not found');\r\n      }\r\n\r\n      // Check if booking is payable\r\n      if (!['pending', 'payment_failed'].includes(bookingData.status)) {\r\n        throw new Error(`Booking not payable. Status: ${bookingData.status}`);\r\n      }\r\n\r\n      setBooking({\r\n        id: bookingData.id,\r\n        confirmationNumber: bookingData.confirmationNumber || bookingData.id,\r\n        hotelName: bookingData.hotelName,\r\n        roomType: bookingData.roomType || 'Standard',\r\n        checkIn: new Date(bookingData.checkIn),\r\n        checkOut: new Date(bookingData.checkOut),\r\n        guests: bookingData.guests || 1,\r\n        nights: bookingData.nights || 1,\r\n        totalAmount: bookingData.totalAmount,\r\n        currency: bookingData.currency || 'USD',\r\n        guestFirstName: bookingData.guestFirstName || 'Guest',\r\n        guestLastName: bookingData.guestLastName || 'User',\r\n        guestEmail: bookingData.guestEmail || '',\r\n        guestPhone: bookingData.guestPhone || '',\r\n        status: bookingData.status,\r\n        paymentStatus: bookingData.paymentStatus || 'pending',\r\n      });\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Failed to load booking details';\r\n      setError(errorMessage);\r\n      toast.error(errorMessage);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [bookingId]);\r\n\r\n  // Initial load effect (placed after definition of loadBookingDetails)\r\n  useEffect(() => {\r\n    if (!bookingId) {\r\n      setError('Booking ID is required');\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    loadBookingDetails();\r\n  }, [bookingId, loadBookingDetails]);\r\n\r\n  const handlePaymentSuccess = async (\r\n    paymentIntent: { paymentId: string; receiptUrl?: string },\r\n  ) => {\r\n    try {\r\n      setPaymentStatus('success');\r\n\r\n      // Show success message\r\n      toast.success('Payment completed successfully!', {\r\n        description: 'Your booking has been confirmed. You will receive a confirmation email shortly.',\r\n        duration: 5000,\r\n      });\r\n\r\n      // Reload booking to get updated status\r\n      await loadBookingDetails();\r\n\r\n      // Redirect to confirmation page after a delay\r\n      setTimeout(() => {\r\n        navigate(`/booking/confirmation/${bookingId}`, {\r\n          state: { paymentIntent },\r\n        });\r\n      }, 3000);\r\n\r\n    } catch (error) {\r\n      console.error('Error handling payment success:', error);\r\n      toast.error('Payment completed but there was an issue updating your booking. Please contact support.');\r\n    }\r\n  };\r\n\r\n  const handlePaymentError = (error: string) => {\r\n    setPaymentStatus('error');\r\n    toast.error('Payment failed', {\r\n      description: error,\r\n      duration: 10000,\r\n    });\r\n  };\r\n\r\n  const handleBackToBooking = () => {\r\n    if (bookingId) {\r\n      navigate(`/booking/${bookingId}`);\r\n    } else {\r\n      navigate('/');\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n          <p className=\"mt-4 text-gray-600\">Loading booking details...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error || !booking) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"max-w-md mx-auto bg-white rounded-lg shadow-lg p-6\">\r\n          <div className=\"text-center\">\r\n            <XCircle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\r\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n              Unable to Load Payment\r\n            </h2>\r\n            <p className=\"text-gray-600 mb-6\">{error}</p>\r\n            <button\r\n              onClick={handleBackToBooking}\r\n              className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n            >\r\n              <ArrowLeft className=\"h-4 w-4 mr-2\" />\r\n              Go Back\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (paymentStatus === 'success') {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"max-w-md mx-auto bg-white rounded-lg shadow-lg p-6\">\r\n          <div className=\"text-center\">\r\n            <CheckCircle className=\"h-12 w-12 text-green-500 mx-auto mb-4\" />\r\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n              Payment Successful!\r\n            </h2>\r\n            <p className=\"text-gray-600 mb-2\">\r\n              Your booking has been confirmed.\r\n            </p>\r\n            <p className=\"text-sm text-gray-500 mb-6\">\r\n              Confirmation Number: <span className=\"font-mono font-medium\">{booking.confirmationNumber}</span>\r\n            </p>\r\n            <div className=\"animate-pulse text-blue-600 text-sm\">\r\n              Redirecting to confirmation page...\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (paymentStatus === 'processing') {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"max-w-md mx-auto bg-white rounded-lg shadow-lg p-6\">\r\n          <div className=\"text-center\">\r\n            <AlertTriangle className=\"h-12 w-12 text-yellow-500 mx-auto mb-4\" />\r\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n              Payment Processing\r\n            </h2>\r\n            <p className=\"text-gray-600 mb-6\">\r\n              Your payment is being processed. Please do not refresh this page.\r\n            </p>\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 py-8\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        {/* Header */}\r\n        <div className=\"mb-8\">\r\n          <button\r\n            onClick={handleBackToBooking}\r\n            className=\"inline-flex items-center text-blue-600 hover:text-blue-700 mb-4 transition-colors\"\r\n          >\r\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\r\n            Back to Booking Details\r\n          </button>\r\n\r\n          <div className=\"bg-white rounded-lg shadow-sm p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-gray-900\">\r\n                  Complete Your Payment\r\n                </h1>\r\n                <p className=\"text-gray-600 mt-1\">\r\n                  Booking #{booking.confirmationNumber}\r\n                </p>\r\n              </div>\r\n              <div className=\"text-right\">\r\n                <p className=\"text-sm text-gray-500\">Total Amount</p>\r\n                <p className=\"text-2xl font-bold text-blue-600\">\r\n                  {PaymentService.formatCurrency(booking.totalAmount, booking.currency)}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Payment Form (Square only) */}\r\n        <SquarePaymentForm\r\n          bookingId={booking.id}\r\n          amount={booking.totalAmount}\r\n          currency={booking.currency}\r\n          onSuccess={handlePaymentSuccess}\r\n          onError={(e) => handlePaymentError(e.message)}\r\n          bookingDetails={{\r\n            hotelName: booking.hotelName,\r\n            checkIn: booking.checkIn.toISOString(),\r\n            checkOut: booking.checkOut.toISOString(),\r\n            guests: booking.guests\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":["PaymentPage","bookingId","useParams","navigate","useNavigate","booking","setBooking","useState","isLoading","setIsLoading","error","setError","paymentStatus","setPaymentStatus","loadBookingDetails","useCallback","bookingData","BookingService","err","errorMessage","toast","useEffect","handlePaymentSuccess","paymentIntent","handlePaymentError","handleBackToBooking","jsxs","jsx","XCircle","ArrowLeft","CheckCircle","AlertTriangle","PaymentService","SquarePaymentForm","e"],"mappings":"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"}